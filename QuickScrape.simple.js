// Generated by CoffeeScript 1.6.3
var Promise, QuickScrape, config, getUrl, html, qs, _;

getUrl = require('request-promise');

Promise = require('bluebird');

html = require('cheerio');

_ = require('lodash');

config = {
  'url': 'http://www.judicialcollege.vic.edu.au/publications',
  'container': '#primary-navigation > ul > li.expanded.active-trail a[href]'
};

QuickScrape = (function() {
  function QuickScrape(url, container) {
    var _this = this;
    this.promise = getUrl(url).then(function(response) {
      var $, urls;
      urls = [];
      $ = html.load(response);
      console.log($(container).length + ' URLs found');
      $(container).map(function(n, link) {
        urls.push(_this.getHref($(link)));
      });
      console.log('Pass #1. URLS: ' + urls.join(','));
      return urls;
    }).then(function(urls) {
      var finalUrls;
      finalUrls = [];
      return Promise.map(urls, function(url) {
        /* Inner Loop*/

        return getUrl(url).then(function(response) {
          var $, href, match, title;
          $ = html.load(response);
          href = _this.getHref2($);
          title = _this.getTitle($);
          if (href == null) {
            return;
          }
          if (match = href.match(/eManuals\/([A-Za-z_]+)\/index.htm/)) {
            finalUrls.push(match[1]);
            return {
              key: match[1],
              value: _this.getTitle($).trim()
            };
          }
          return console.log('No match: ' + href);
        });
      }).call("filter", function(href) {
        return (href != null ? href.key : void 0) != null;
      });
    }).then(function(urls) {
      return console.log('Inner and out loops complete, URLS: ' + JSON.stringify(urls));
    });
    console.log('The promise returned: ', this.promise);
  }

  QuickScrape.prototype.getHref = function($) {
    return 'http://www.judicialcollege.vic.edu.au' + $.attr('href');
  };

  QuickScrape.prototype.getHref2 = function($) {
    return $('div.content > div.view-publication-link > a[href]').attr('href');
  };

  QuickScrape.prototype.getTitle = function($) {
    return $('div.content > div.publication-title').text();
  };

  return QuickScrape;

})();

qs = new QuickScrape(config.url, config.container);
